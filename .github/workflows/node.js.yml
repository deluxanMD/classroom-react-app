# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  setup:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: Just a try
        run: |
          rm -rf node_modules
          rm -rf package-lock.json
          npm install eslint@8.26.0

      - name: Install dependencies
        run: npm install

  lint-and-prettier:
    runs-on: ubuntu-latest
    needs: setup

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - run: npm run lint
      - run: npm run format:check
      - run: npm test -- --coverage
        env:
          CI: true

  code-coverage:
    runs-on: ubuntu-latest
    needs: lint-and-prettier

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Run the tests and generate coverage report
        run: npm test -- --coverage

      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          name: Upload reports to codecov
          fail_ci_if_error: true
          verbose: true
      - run: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          find . -iregex "codecov.*"
          chmod +x codecov 
          ./codecov -t ${CODECOV_TOKEN}

  build:
    runs-on: ubuntu-latest
    needs: code-coverage

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Build
        run: npm run build
